import { useState, useEffect } from 'react';
import { useRouter } from 'next/router';
import Link from 'next/link';
import { useTranslation } from '../hooks/useTranslation';

export default function Header() {
  const { t, i18n } = useTranslation();
  const router = useRouter();
  const [isMenuOpen, setIsMenuOpen] = useState(false);
  const [isScrolled, setIsScrolled] = useState(false);
  
  const toggleLanguage = () => {
    const newLocale = i18n.language === 'bg' ? 'en' : 'bg';
    i18n.changeLanguage(newLocale);
  };
  
  // Handle scroll event to change header style when scrolled
  useEffect(() => {
    const handleScroll = () => {
      setIsScrolled(window.scrollY > 10);
    };
    
    window.addEventListener('scroll', handleScroll);
    
    return () => {
      window.removeEventListener('scroll', handleScroll);
    };
  }, []);

  return (
    <header className={`fixed top-0 left-0 right-0 z-50 transition-all duration-300 ${
      isScrolled ? 'bg-white/90 backdrop-blur-md shadow-sm py-2' : 'bg-white/70 backdrop-blur-sm py-3'
    }`}>
      <div className="container mx-auto px-4">
        <div className="flex justify-between items-center">
          {/* Logo */}
          <Link href="/" className="flex items-center space-x-3 text-gray-800 hover:text-indigo-600 transition-colors duration-300">
            <div className="w-8 h-8">
              <svg viewBox="0 0 375 375" className="w-full h-full">
                <g style={{fill:'currentColor', fillOpacity:1}}>
                  <g transform="translate(37.022808, 256.5658)">
                    <path style={{stroke:'none'}} d="M 167.234375 -140.640625 C 167.390625 -130.898438 165.429688 -121.675781 161.359375 -112.96875 C 157.285156 -104.257812 151.9375 -96.3125 145.3125 -89.125 C 138.6875 -81.9375 131.695312 -75.46875 124.34375 -69.71875 C 112.6875 -60.613281 100.03125 -53.023438 86.375 -46.953125 C 72.71875 -40.890625 58.539062 -36.976562 43.84375 -35.21875 C 43.207031 -35.0625 42.847656 -35.421875 42.765625 -36.296875 C 42.679688 -37.171875 42.960938 -37.691406 43.609375 -37.859375 C 45.359375 -38.171875 47.070312 -38.566406 48.75 -39.046875 C 50.425781 -39.523438 52.066406 -39.925781 53.671875 -40.25 C 67.410156 -43.925781 80.664062 -48.878906 93.4375 -55.109375 C 106.21875 -61.335938 117.957031 -69.082031 128.65625 -78.34375 C 135.363281 -84.09375 141.59375 -90.601562 147.34375 -97.875 C 153.09375 -105.144531 157.484375 -113.050781 160.515625 -121.59375 C 163.554688 -130.132812 164.28125 -139.117188 162.6875 -148.546875 C 161.5625 -154.773438 159.363281 -160.523438 156.09375 -165.796875 C 152.820312 -171.066406 148.46875 -175.378906 143.03125 -178.734375 C 137.925781 -181.929688 132.378906 -184.046875 126.390625 -185.078125 C 120.398438 -186.117188 114.445312 -186.484375 108.53125 -186.171875 C 102.144531 -186.003906 95.835938 -185.125 89.609375 -183.53125 C 83.378906 -181.9375 77.3125 -180.019531 71.40625 -177.78125 C 65.007812 -175.21875 58.695312 -172.300781 52.46875 -169.03125 C 46.238281 -165.757812 40.25 -162.207031 34.5 -158.375 C 23.15625 -150.539062 12.691406 -141.351562 3.109375 -130.8125 C -1.515625 -125.707031 -5.742188 -120 -9.578125 -113.6875 C -13.410156 -107.375 -15.648438 -100.625 -16.296875 -93.4375 C -16.296875 -92.957031 -16.535156 -92.71875 -17.015625 -92.71875 C -17.492188 -92.71875 -17.734375 -92.957031 -17.734375 -93.4375 C -17.566406 -95.195312 -17.363281 -96.953125 -17.125 -98.703125 C -16.882812 -100.460938 -16.523438 -102.144531 -16.046875 -103.75 C -13.972656 -110.769531 -10.738281 -117.234375 -6.34375 -123.140625 C -1.957031 -129.054688 2.710938 -134.488281 7.671875 -139.4375 C 17.734375 -149.820312 28.910156 -158.847656 41.203125 -166.515625 C 53.660156 -174.179688 66.84375 -180.171875 80.75 -184.484375 C 86.8125 -186.566406 93.078125 -188.046875 99.546875 -188.921875 C 106.015625 -189.796875 112.445312 -189.992188 118.84375 -189.515625 C 124.90625 -189.035156 130.851562 -187.757812 136.6875 -185.6875 C 142.519531 -183.613281 147.671875 -180.5 152.140625 -176.34375 C 157.253906 -171.863281 161.007812 -166.46875 163.40625 -160.15625 C 165.800781 -153.851562 167.078125 -147.347656 167.234375 -140.640625 Z M 59.890625 -132.734375 C 57.816406 -129.222656 55.703125 -125.75 53.546875 -122.3125 C 51.390625 -118.875 49.191406 -115.398438 46.953125 -111.890625 C 39.929688 -100.234375 32.945312 -88.492188 26 -76.671875 C 19.050781 -64.847656 12.617188 -52.785156 6.703125 -40.484375 C 3.828125 -34.421875 1.070312 -28.234375 -1.5625 -21.921875 C -4.195312 -15.609375 -6.628906 -9.179688 -8.859375 -2.640625 C -10.941406 3.753906 -12.859375 10.222656 -14.609375 16.765625 C -14.773438 17.566406 -15.015625 18.40625 -15.328125 19.28125 C -15.648438 20.164062 -15.972656 21.003906 -16.296875 21.796875 C -16.453125 22.597656 -16.609375 23.359375 -16.765625 24.078125 C -16.929688 24.796875 -17.09375 25.554688 -17.25 26.359375 C -17.726562 27.953125 -18.164062 29.585938 -18.5625 31.265625 C -18.96875 32.941406 -19.328125 34.660156 -19.640625 36.421875 C -19.804688 37.054688 -20.164062 37.332031 -20.71875 37.25 C -21.28125 37.175781 -21.5625 36.816406 -21.5625 36.171875 C -21.238281 34.253906 -20.957031 32.335938 -20.71875 30.421875 C -20.476562 28.503906 -20.203125 26.585938 -19.890625 24.671875 C -19.566406 22.753906 -19.242188 20.878906 -18.921875 19.046875 C -18.609375 17.210938 -18.210938 15.335938 -17.734375 13.421875 C -16.929688 9.742188 -15.929688 6.066406 -14.734375 2.390625 C -13.535156 -1.273438 -12.378906 -4.945312 -11.265625 -8.625 C -6.628906 -21.5625 -1.195312 -34.179688 5.03125 -46.484375 C 11.257812 -58.785156 17.804688 -70.84375 24.671875 -82.65625 C 28.191406 -88.726562 31.785156 -94.675781 35.453125 -100.5 C 39.128906 -106.332031 42.804688 -112.207031 46.484375 -118.125 C 48.554688 -121.3125 50.585938 -124.503906 52.578125 -127.703125 C 54.578125 -130.898438 56.617188 -134.09375 58.703125 -137.28125 C 59.816406 -139.039062 60.851562 -140.71875 61.8125 -142.3125 C 62.769531 -143.914062 63.8125 -145.515625 64.9375 -147.109375 C 66.050781 -148.546875 67.085938 -149.984375 68.046875 -151.421875 C 69.003906 -152.859375 70.203125 -154.132812 71.640625 -155.25 C 71.960938 -155.570312 72.125 -155.414062 72.125 -154.78125 C 71.644531 -152.695312 70.882812 -150.738281 69.84375 -148.90625 C 68.800781 -147.070312 67.722656 -145.273438 66.609375 -143.515625 C 65.492188 -141.753906 64.375 -139.957031 63.25 -138.125 C 62.132812 -136.289062 61.015625 -134.492188 59.890625 -132.734375 Z M 59.890625 -132.734375" />
                  </g>
                  <g transform="translate(199.710331, 256.5658)">
                    <path style={{stroke:'none'}} d="M 164.84375 -171.0625 C 167.070312 -168.351562 168.425781 -165.238281 168.90625 -161.71875 C 169.382812 -158.207031 169.144531 -154.773438 168.1875 -151.421875 C 166.914062 -146.304688 164.519531 -141.953125 161 -138.359375 C 157.488281 -134.765625 153.492188 -131.691406 149.015625 -129.140625 C 144.546875 -126.585938 140 -124.191406 135.375 -121.953125 C 135.207031 -121.953125 135.046875 -122.070312 134.890625 -122.3125 C 134.734375 -122.550781 134.734375 -122.75 134.890625 -122.90625 C 136.648438 -123.707031 138.40625 -124.546875 140.15625 -125.421875 C 141.914062 -126.304688 143.675781 -127.304688 145.4375 -128.421875 C 148.789062 -130.660156 151.984375 -133.054688 155.015625 -135.609375 C 158.046875 -138.160156 160.601562 -141.113281 162.6875 -144.46875 C 164.4375 -147.664062 165.550781 -151.0625 166.03125 -154.65625 C 166.507812 -158.25 166.113281 -161.722656 164.84375 -165.078125 C 163.40625 -168.585938 161.085938 -171.34375 157.890625 -173.34375 C 154.691406 -175.34375 151.257812 -176.738281 147.59375 -177.53125 C 144.238281 -178.488281 140.765625 -179.164062 137.171875 -179.5625 C 133.578125 -179.96875 129.941406 -180.171875 126.265625 -180.171875 C 112.046875 -180.335938 98.109375 -177.863281 84.453125 -172.75 C 70.796875 -167.632812 58.617188 -160.363281 47.921875 -150.9375 C 45.359375 -148.539062 42.835938 -146.066406 40.359375 -143.515625 C 37.890625 -140.960938 35.535156 -138.25 33.296875 -135.375 C 30.742188 -132.019531 28.390625 -128.546875 26.234375 -124.953125 C 24.078125 -121.359375 22.441406 -117.644531 21.328125 -113.8125 C 19.242188 -105.976562 19.878906 -98.507812 23.234375 -91.40625 C 26.585938 -84.300781 30.820312 -78.03125 35.9375 -72.59375 C 41.6875 -66.84375 47.957031 -61.726562 54.75 -57.25 C 61.539062 -52.78125 67.8125 -47.671875 73.5625 -41.921875 C 77.226562 -38.410156 80.421875 -34.5 83.140625 -30.1875 C 85.859375 -25.875 87.65625 -21.359375 88.53125 -16.640625 C 89.40625 -11.929688 88.726562 -7.023438 86.5 -1.921875 C 83.9375 4.304688 79.703125 9.296875 73.796875 13.046875 C 67.890625 16.804688 61.660156 19.328125 55.109375 20.609375 C 48.078125 22.359375 40.96875 22.117188 33.78125 19.890625 C 26.269531 17.171875 19.960938 12.773438 14.859375 6.703125 C 14.210938 5.910156 14.207031 5.3125 14.84375 4.90625 C 15.488281 4.507812 16.050781 4.472656 16.53125 4.796875 C 19.082031 7.671875 22.359375 10.144531 26.359375 12.21875 C 32.898438 15.570312 39.882812 17.164062 47.3125 17 C 54.738281 16.84375 61.648438 14.929688 68.046875 11.265625 C 70.921875 9.503906 73.59375 7.546875 76.0625 5.390625 C 78.539062 3.234375 80.582031 0.640625 82.1875 -2.390625 C 83.9375 -5.910156 84.734375 -9.46875 84.578125 -13.0625 C 84.421875 -16.65625 83.539062 -20.207031 81.9375 -23.71875 C 80.34375 -27.394531 78.1875 -30.828125 75.46875 -34.015625 C 72.757812 -37.210938 69.804688 -40.085938 66.609375 -42.640625 C 63.410156 -45.359375 60.132812 -47.953125 56.78125 -50.421875 C 53.425781 -52.898438 49.992188 -55.421875 46.484375 -57.984375 C 40.566406 -62.617188 34.894531 -67.847656 29.46875 -73.671875 C 24.039062 -79.503906 20.128906 -86.09375 17.734375 -93.4375 C 16.609375 -97.113281 16.046875 -100.90625 16.046875 -104.8125 C 16.046875 -108.726562 16.609375 -112.601562 17.734375 -116.4375 C 19.171875 -120.4375 21.003906 -124.234375 23.234375 -127.828125 C 25.472656 -131.421875 27.867188 -134.894531 30.421875 -138.25 C 34.898438 -144 39.8125 -149.304688 45.15625 -154.171875 C 50.507812 -159.046875 56.300781 -163.238281 62.53125 -166.75 C 75.15625 -174.257812 88.65625 -179.375 103.03125 -182.09375 C 117.882812 -184.8125 132.257812 -184.734375 146.15625 -181.859375 C 149.820312 -180.898438 153.332031 -179.617188 156.6875 -178.015625 C 160.039062 -176.421875 162.757812 -174.101562 164.84375 -171.0625 Z M 164.84375 -171.0625" />
                  </g>
                </g>
              </svg>
            </div>
            <span className="text-lg font-black">Peter Stoyanov</span>
          </Link>
          
          {/* Desktop Navigation */}
          <nav className="hidden md:flex items-center space-x-6">
            <Link href="/" className={`text-sm text-gray-600 hover:text-indigo-600 transition duration-300 ${
              router.pathname === '/' ? 'font-medium text-indigo-600' : ''
            }`}>
              {t('nav.home')}
            </Link>
            <Link href="/about" className={`text-sm text-gray-600 hover:text-indigo-600 transition duration-300 ${
              router.pathname === '/about' ? 'font-medium text-indigo-600' : ''
            }`}>
              {t('nav.about')}
            </Link>
            <Link href="/corporate" className={`text-sm text-gray-600 hover:text-indigo-600 transition duration-300 ${
              router.pathname === '/corporate' ? 'font-medium text-indigo-600' : ''
            }`}>
              {t('nav.corporate')}
            </Link>
            <Link href="/waitlist" className="bg-indigo-600 hover:bg-indigo-700 text-white text-sm font-medium py-1.5 px-3 rounded-md transition duration-300">
              {t('nav.waitlist')}
            </Link>
            
            {/* Language Switcher */}
            <button 
              onClick={toggleLanguage}
              className="px-2 py-1 text-xs text-gray-500 hover:text-indigo-600 hover:bg-indigo-50 rounded transition duration-300 font-medium"
            >
              {i18n.language === 'bg' ? 'EN' : 'BG'}
            </button>
          </nav>
          
          {/* Mobile Menu Button */}
          <button 
            className="md:hidden text-gray-600 hover:text-gray-800 focus:outline-none"
            onClick={() => setIsMenuOpen(!isMenuOpen)}
          >
            {isMenuOpen ? (
              <svg className="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={1.5} d="M6 18L18 6M6 6l12 12" />
              </svg>
            ) : (
              <svg className="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={1.5} d="M4 6h16M4 12h16M4 18h16" />
              </svg>
            )}
          </button>
        </div>
        
        {/* Mobile Navigation */}
        {isMenuOpen && (
          <nav className="md:hidden mt-4 pb-4">
            <div className="flex flex-col space-y-4">
              <Link href="/" 
                className={`text-gray-700 hover:text-indigo-600 transition duration-300 ${
                  router.pathname === '/' ? 'font-semibold text-indigo-600' : ''
                }`}
                onClick={() => setIsMenuOpen(false)}
              >
                {t('nav.home')}
              </Link>
              <Link href="/about" 
                className={`text-gray-700 hover:text-indigo-600 transition duration-300 ${
                  router.pathname === '/about' ? 'font-semibold text-indigo-600' : ''
                }`}
                onClick={() => setIsMenuOpen(false)}
              >
                {t('nav.about')}
              </Link>
              <Link href="/corporate" 
                className={`text-gray-700 hover:text-indigo-600 transition duration-300 ${
                  router.pathname === '/corporate' ? 'font-semibold text-indigo-600' : ''
                }`}
                onClick={() => setIsMenuOpen(false)}
              >
                {t('nav.corporate')}
              </Link>
              <Link href="/waitlist" 
                className="bg-indigo-600 hover:bg-indigo-700 text-white font-semibold py-2 px-4 rounded-lg transition duration-300 inline-block"
                onClick={() => setIsMenuOpen(false)}
              >
                {t('nav.waitlist')}
              </Link>
              
              {/* Language Switcher */}
              <button 
                onClick={() => {
                  toggleLanguage();
                  setIsMenuOpen(false);
                }}
                className="px-3 py-1 text-gray-700 hover:text-indigo-600 hover:bg-indigo-50 rounded-md transition duration-300 font-medium"
              >
                {i18n.language === 'bg' ? 'EN' : 'BG'}
              </button>
            </div>
          </nav>
        )}
      </div>
    </header>
  );
}